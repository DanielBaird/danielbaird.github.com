// Generated by CoffeeScript 1.3.3
(function() {
  var pick_one, trim_leading_zeros;

  pick_one = function(list) {
    if (list.length === 0) {
      return null;
    }
    return list[Math.floor(Math.random() * list.length)];
  };

  trim_leading_zeros = function(digits) {
    while (digits[0] === 0 && digits.length > 1) {
      digits.shift();
    }
    return digits;
  };

  $(function() {
    var update;
    update = function() {
      var avoid_zeros, digit, digitlengths, digits, first_digit, first_digits, length, less_zeros_digits, operation, operations, problem, problemhtml, problems, second_digit, second_digits;
      $('#problems').empty().append('<p><b><i>Instructions:</i> Work out the answer for each problem and write it in the space below.</b></p>');
      avoid_zeros = $('.settings input[name="avoidzeros"]').prop('checked');
      console.log(avoid_zeros);
      digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
      less_zeros_digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9];
      operations = ['+', '-', '*'];
      operations = ['+'];
      digitlengths = [3, 4, 5];
      problems = (function() {
        var _i, _results;
        _results = [];
        for (problem = _i = 0; _i <= 4; problem = ++_i) {
          operation = pick_one(operations);
          length = pick_one(digitlengths);
          first_digits = (function() {
            var _j, _results1;
            _results1 = [];
            for (digit = _j = 1; 1 <= length ? _j <= length : _j >= length; digit = 1 <= length ? ++_j : --_j) {
              _results1.push(pick_one(digits));
            }
            return _results1;
          })();
          trim_leading_zeros(first_digits);
          second_digits = (function() {
            var _j, _len, _results1;
            _results1 = [];
            for (_j = 0, _len = first_digits.length; _j < _len; _j++) {
              first_digit = first_digits[_j];
              second_digit = 10;
              while (second_digit + first_digit >= 10) {
                if (avoid_zeros) {
                  second_digit = pick_one(less_zeros_digits);
                } else {
                  second_digit = pick_one(digits);
                }
              }
              _results1.push(second_digit);
            }
            return _results1;
          })();
          trim_leading_zeros(second_digits);
          problemhtml = '<div class="problemarea">';
          problemhtml += '<div class="first number">';
          problemhtml += '<span class="digit">' + (first_digits.join('</span><span class="digit">')) + '</span>';
          problemhtml += '</div><div class="second number">';
          problemhtml += '<span class="operator">' + operation + '</span>';
          problemhtml += '<span class="digit">' + (second_digits.join('</span><span class="digit">')) + '</span>';
          problemhtml += '</div><div class="answer number">';
          problemhtml += '</div>';
          _results.push(problemhtml += '</div>');
        }
        return _results;
      })();
      $('#problems').append($(problems.join("")));
      return event.stopPropagation();
    };
    $('input').change(function(event) {
      return update();
    });
    $('#make').click(function(event) {
      return update();
    });
    return update();
  });

}).call(this);
